package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author andrei
 */
public class MainWindow extends javax.swing.JFrame {
    String root = "../";
    String personsPath = root + "ConfigData/persons.data";
    String addNewPath = root + "CorePackage/newPerson.py";
    String trainBasePath = root + "TrainBase/";
    String encodingsPath = root + "Encodings/";
    String openCrtPath = root + "CorePackage/openCrt.py";
    
    Set<String> nameSet = new TreeSet<>();
    File file = new File(personsPath);

    /**
     * Creates new form MainWindow
     */

    public MainWindow() {
        initComponents();
        updateSet();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openInCurrentConfigurationButton = new javax.swing.JButton();
        addNewPersonButton = new javax.swing.JButton();
        removePersonButton = new javax.swing.JButton();
        listDatabaseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        clrChat = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        addTextField = new javax.swing.JTextField();
        removeTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openInCurrentConfigurationButton.setText("OPEN IN CURRENT CONFIGURATION");
        openInCurrentConfigurationButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openInCurrentConfigurationButtonMouseClicked(evt);
            }
        });

        addNewPersonButton.setText("ADD NEW PERSON TO DATABASE");
        addNewPersonButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewPersonButtonMouseClicked(evt);
            }
        });
        addNewPersonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewPersonButtonActionPerformed(evt);
            }
        });

        removePersonButton.setText("REMOVE PERSON(S) FROM DATABASE");
        removePersonButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removePersonButtonMouseClicked(evt);
            }
        });

        listDatabaseButton.setText("LIST DATABASE");
        listDatabaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDatabaseButtonMouseClicked(evt);
            }
        });

        chat.setEditable(false);
        chat.setColumns(20);
        chat.setRows(5);
        jScrollPane1.setViewportView(chat);

        jLabel1.setText("MESSAGES FROM THE APPLICATION");

        clrChat.setText("CLEAR MESSAGEBOX");
        clrChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clrChatMouseClicked(evt);
            }
        });

        reset.setText("RESET APPLICATION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clrChat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset)
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openInCurrentConfigurationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(removePersonButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addNewPersonButton, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(openInCurrentConfigurationButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewPersonButton)
                    .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removePersonButton)
                    .addComponent(removeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(listDatabaseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clrChat)
                    .addComponent(reset))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewPersonButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewPersonButtonMouseClicked
        
        String name = addTextField.getText().replace(" ", "");
        if(name.equals("")) return;
        if (nameSet.contains(name)) {
            String msg = chat.getText();
            msg += "Label " + name + " already exists! Routine interrupted!\n";
            chat.setText(msg);
            return;
        }
        
        nameSet.add(name);
        int size = nameSet.size();
        try (FileOutputStream fos = new FileOutputStream(file)) {
            StringBuilder str = new StringBuilder();
            str.append(Integer.toString(size));
            str.append('\n');
            nameSet.stream().map((x) -> {
                str.append(x);
                return x;
            }).forEachOrdered((_item) -> {
                str.append('\n');
            });
            fos.write(str.toString().getBytes());
            addTextField.setText("");
            String cmd = "python " + addNewPath + " " +name;
            Process p = Runtime.getRuntime().exec(cmd);
            BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String ret = in.readLine();
            if (ret.equalsIgnoreCase("Done")) {
                this.chat.setText(this.chat.getText() + "Added " + name + " in the database.\n");
            }
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addNewPersonButtonMouseClicked

    private void clrChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clrChatMouseClicked
        chat.setText("");
    }//GEN-LAST:event_clrChatMouseClicked

    private void addNewPersonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewPersonButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewPersonButtonActionPerformed

    private void removePersonButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removePersonButtonMouseClicked
        String name = this.removeTextField.getText().replaceAll(" ", "");
        if(name.equals("")) return;
        if (!nameSet.contains(name)) {
            chat.setText(chat.getText() + "Label "+name + " does not exist. Nothing removed.\n");
            this.removeTextField.setText("");
            return;
        }
        
        nameSet.remove(name);
        int size = nameSet.size();
        try (FileOutputStream fos = new FileOutputStream(file)) {
            StringBuilder str = new StringBuilder();
            str.append(Integer.toString(size));
            str.append('\n');
            nameSet.stream().map((x) -> {
                str.append(x);
                return x;
            }).forEachOrdered((_item) -> {
                str.append('\n');
            });
            fos.write(str.toString().getBytes());
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        removeTextField.setText("");
        String cmd1 = "rm -rf " + trainBasePath + name + ".jpg";
        String cmd2 = "rm -rf " + encodingsPath + name + ".data";
        
        try {
            Process p1 = Runtime.getRuntime().exec(cmd1);
            Process p2 = Runtime.getRuntime().exec(cmd2);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        chat.setText(chat.getText()+"Removed " + name + " from database.\n");
    }//GEN-LAST:event_removePersonButtonMouseClicked

    private void listDatabaseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDatabaseButtonMouseClicked
        String list = "=======\nDatabase:\n";
        list = nameSet.stream().map((name) -> name + "\n").reduce(list, String::concat);
        chat.setText(chat.getText()+list);
    }//GEN-LAST:event_listDatabaseButtonMouseClicked

    private void openInCurrentConfigurationButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openInCurrentConfigurationButtonMouseClicked
        String cmd1 = "python " + openCrtPath;
        try {
            Process p1 = Runtime.getRuntime().exec(cmd1);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openInCurrentConfigurationButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewPersonButton;
    private javax.swing.JTextField addTextField;
    private javax.swing.JTextArea chat;
    private javax.swing.JButton clrChat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listDatabaseButton;
    private javax.swing.JButton openInCurrentConfigurationButton;
    private javax.swing.JButton removePersonButton;
    private javax.swing.JTextField removeTextField;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables

    private void updateSet() {
        try {
            Scanner scan = new Scanner(file);
            int n = Integer.parseInt(scan.nextLine());
            for (int i = 0; i < n; i++) {
                nameSet.add(scan.nextLine());
            }
        } catch (FileNotFoundException ex) {
            String msg = chat.getText();
            msg += "\nCould not read persons.data!\n";
            chat.setText(msg);
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
